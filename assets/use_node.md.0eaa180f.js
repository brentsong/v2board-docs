import{_ as t,c as e,o as l,a as d}from"./app.96d1a286.js";const c=JSON.parse('{"title":"节点","description":"","frontmatter":{},"headers":[{"level":3,"title":"V2Board支持的协议","slug":"v2board支持的协议","link":"#v2board支持的协议","children":[]},{"level":3,"title":"支持订阅的客户端","slug":"支持订阅的客户端","link":"#支持订阅的客户端","children":[]},{"level":3,"title":"连接端口和服务端口有什么区别","slug":"连接端口和服务端口有什么区别","link":"#连接端口和服务端口有什么区别","children":[]},{"level":3,"title":"父节点与子节点关系","slug":"父节点与子节点关系","link":"#父节点与子节点关系","children":[]},{"level":3,"title":"权限组","slug":"权限组","link":"#权限组","children":[]},{"level":3,"title":"节点状态指示灯含义","slug":"节点状态指示灯含义","link":"#节点状态指示灯含义","children":[]},{"level":3,"title":"路由","slug":"路由","link":"#路由","children":[]}],"relativePath":"use/node.md"}'),a={name:"use/node.md"},s=d('<h1 id="节点" tabindex="-1">节点 <a class="header-anchor" href="#节点" aria-hidden="true">#</a></h1><p>本文会解答你使用V2Board配置节点中部分问题。</p><h3 id="v2board支持的协议" tabindex="-1">V2Board支持的协议 <a class="header-anchor" href="#v2board支持的协议" aria-hidden="true">#</a></h3><p>V2Board目前支持以下协议：</p><ul><li>Shadowsocks</li><li>Vmess</li><li>Trojan</li></ul><h3 id="支持订阅的客户端" tabindex="-1">支持订阅的客户端 <a class="header-anchor" href="#支持订阅的客户端" aria-hidden="true">#</a></h3><p>自动订阅 ☑️：客户端请求时携带的UA可以让V2board知道客户端的类型进行处理。<br> 自动订阅 ❌：客户端请求V2Board无法识别需要携带参数指定识别码请求，如v2rayng请在订阅后加上<code>&amp;flag=v2rayng</code></p><table><thead><tr><th style="text-align:left;">客户端</th><th style="text-align:left;">Shadowsocks</th><th style="text-align:left;">V2ray</th><th style="text-align:left;">Trojan</th><th style="text-align:left;">自动订阅</th><th style="text-align:left;">识别码</th></tr></thead><tbody><tr><td style="text-align:left;">Clash</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">clash</td></tr><tr><td style="text-align:left;">Shadowrocket</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">shadowrocket</td></tr><tr><td style="text-align:left;">Surge</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">surge</td></tr><tr><td style="text-align:left;">QuantumultX</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">quantumult%20x</td></tr><tr><td style="text-align:left;">Surfboard</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">surfboard</td></tr><tr><td style="text-align:left;">V2rayNG</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">❌</td><td style="text-align:left;">v2rayng</td></tr><tr><td style="text-align:left;">V2rayN</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">❌</td><td style="text-align:left;">v2rayn</td></tr><tr><td style="text-align:left;">Passwall</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">❌</td><td style="text-align:left;">passwall</td></tr><tr><td style="text-align:left;">SSRPlus</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">❌</td><td style="text-align:left;">ssrplus</td></tr><tr><td style="text-align:left;">Shadowsocks</td><td style="text-align:left;">☑️</td><td style="text-align:left;">❌</td><td style="text-align:left;">❌</td><td style="text-align:left;">☑️</td><td style="text-align:left;">shadowsocks</td></tr><tr><td style="text-align:left;">AnXray</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">aaxray</td></tr><tr><td style="text-align:left;">Stash</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">☑️</td><td style="text-align:left;">stash</td></tr></tbody></table><h3 id="连接端口和服务端口有什么区别" tabindex="-1">连接端口和服务端口有什么区别 <a class="header-anchor" href="#连接端口和服务端口有什么区别" aria-hidden="true">#</a></h3><p>连接端口是用户连接所使用的端口，服务端口为节点提供服务所使用的端口。假设你有一台中转服务器将A服务器1234端口数据转发到B服务器4567端口，那么用户连接A服务器，而服务部署于B服务器。</p><h3 id="父节点与子节点关系" tabindex="-1">父节点与子节点关系 <a class="header-anchor" href="#父节点与子节点关系" aria-hidden="true">#</a></h3><p>一般只有多入口单出口（多中转单落地）的情况下才会使用到。</p><p><strong>父节点</strong><br> 父节点用于服务端获取节点配置及客户端连接所使用，假设使用的是官方的服务端只需要在V2Board进行节点配置无需额外在服务端进行配置，配置将会自动从V2Board获取一键部署。</p><p><strong>子节点</strong><br> 子节点继承父节点的节点状态以便显示正确的节点状态展示给用户，参数配置只做为客户端连接使用，不会与服务端进行交互。节点倍率同步父节点。</p><p><strong>中转例子</strong><br> 假设我给落地端配置443端口，那么我先在父节点配置好落地服务器并且保证可以连接到落地端，随后我们将中转端口10443转发至落地443端口，那么我只需要复制一个子节点把地址改成中转地址，端口改成10443让用户连接到中转即可。</p><h3 id="权限组" tabindex="-1">权限组 <a class="header-anchor" href="#权限组" aria-hidden="true">#</a></h3><p>权限组像是用户和节点的桥梁，部署服务端时，服务端将会从节点配置的权限组中拉取组中的用户。用户在订阅时也只会显示有权限的节点。</p><h3 id="节点状态指示灯含义" tabindex="-1">节点状态指示灯含义 <a class="header-anchor" href="#节点状态指示灯含义" aria-hidden="true">#</a></h3><p>蓝色：节点一切正常<br> 黄色：节点可用，但节点没有人使用或有人使用但是没有数据上报到V2Board<br> 红色：节点不可用，节点没有从V2Board获取到数据</p><h3 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-hidden="true">#</a></h3><p>在 1.7.0 版本中，我们新增了路由功能以取代审计功能。当匹配到指定规则时他将执行指定动作。</p><p>举例：我将屏蔽 <a href="http://example.com" target="_blank" rel="noreferrer">example.com</a> 的访问或域名包含 <a href="http://example.com" target="_blank" rel="noreferrer">example.com</a> 的访问，那么创建路由时匹配域名填写 <code>*.example.com</code> 即可，动作为 禁止访问。</p><p>路由创建后需配置节点进行应用。</p>',23),n=[s];function r(i,f,g,x,y,h){return l(),e("div",null,n)}const p=t(a,[["render",r]]);export{c as __pageData,p as default};
