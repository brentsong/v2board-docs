import{_ as e,c as a,o as s,a as t}from"./app.0d8b5be3.js";const m=JSON.parse('{"title":"进阶","description":"","frontmatter":{},"headers":[{"level":3,"title":"前端分离","slug":"前端分离","link":"#前端分离","children":[]},{"level":3,"title":"Clash配置文件自定义","slug":"clash配置文件自定义","link":"#clash配置文件自定义","children":[]},{"level":3,"title":"客户端的适配","slug":"客户端的适配","link":"#客户端的适配","children":[]},{"level":3,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}],"relativePath":"use/advanced.md"}'),l={name:"use/advanced.md"},n=t(`<h1 id="进阶" tabindex="-1">进阶 <a class="header-anchor" href="#进阶" aria-hidden="true">#</a></h1><h3 id="前端分离" tabindex="-1">前端分离 <a class="header-anchor" href="#前端分离" aria-hidden="true">#</a></h3><p>V2Board的前端文件可以从V2Board分离出来进行部署，这是V2Board的一点特色，可以提升用户的访问体验。</p><p>前端目前分为2端</p><ul><li><a href="https://github.com/v2board/v2board-user/releases" target="_blank" rel="noreferrer">用户</a></li><li><a href="https://github.com/v2board/v2board-admin/releases" target="_blank" rel="noreferrer">管理员</a></li></ul><p>你可以选择对应的V2Board版本对这两个前端分别进行部署</p><p>部署方式非常简单，你只需要下载或者克隆到HTML站点并配置<code>env.example.js</code>并重命名为<code>env.js</code>即可完成</p><h3 id="clash配置文件自定义" tabindex="-1">Clash配置文件自定义 <a class="header-anchor" href="#clash配置文件自定义" aria-hidden="true">#</a></h3><p>首先你需要前往 <strong>/resources/rules</strong> ，这个目录下存放着订阅软件相关配置文件</p><p>复制一份<code>default.clash.yaml</code>重命名为<code>custom.clash.yaml</code>并且配置成自己想要的形式，其中<code>$app_name</code>参数为站点名称可以参考默认配置文件配置。保存后将会优先使用<code>custom.clash.yaml</code>，需要恢复默认配置删除即可。</p><p>后续V2board进行更新则不会覆盖该配置。</p><p>参考下列示例可以对Proxies进行过滤</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">proxy-groups:</span></span>
<span class="line"><span style="color:#A6ACCD;">  - { name: &quot;$app_name&quot;, type: select, proxies: [&quot;自动选择&quot;, &quot;故障转移&quot;] }</span></span>
<span class="line"><span style="color:#A6ACCD;">  - { name: &quot;自动选择&quot;, type: url-test, proxies: [], url: &quot;http://www.gstatic.com/generate_204&quot;, interval: 86400 }</span></span>
<span class="line"><span style="color:#A6ACCD;">  - { name: &quot;故障转移&quot;, type: fallback, proxies: [], url: &quot;http://www.gstatic.com/generate_204&quot;, interval: 7200 }</span></span>
<span class="line"><span style="color:#A6ACCD;">  // 使用正则将节点名称包含香港的节点分配到这个规则中</span></span>
<span class="line"><span style="color:#A6ACCD;">  - { name: &quot;香港&quot;, type: select, proxies: [/香港/, &quot;自动选择&quot;] }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="客户端的适配" tabindex="-1">客户端的适配 <a class="header-anchor" href="#客户端的适配" aria-hidden="true">#</a></h3><p>市面上形形色色的客户端均可以通过参考 <code>app/Http/Controllers/Client/Protocols/</code> 目录下文件进行配置。</p><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-hidden="true">#</a></h3><p>Q：前后端分离后登陆后立马退出是怎么回事？<br> A：前段使用的域名跟后端使用的域名必须是同一个根域。</p>`,17),o=[n];function r(c,p,d,i,h,u){return s(),a("div",null,o)}const C=e(l,[["render",r]]);export{m as __pageData,C as default};
